//program 
<prog>      -> <def_func> EOL <prog>
<prog>      -> <body> EOL <prog>
<prog>      -> EOF

//expression 
<expr>      -> nil 
<expr>      -> id 
<expr>      -> integer 
<expr>      -> string 
<expr>      -> float 
<expr>      -> not <expr> 
<expr>      -> <expr> + <expr> 
<expr>      -> <expr> - <expr> 
<expr>      -> <expr> / <expr> 
<expr>      -> <expr> * <expr> 
<expr>      -> <expr> == <expr> 
<expr>      -> <expr> != <expr> 
<expr>      -> <expr> < <expr> 
<expr>      -> <expr> > <expr> 
<expr>      -> <expr> <= <expr> 
<expr>      -> <expr> >= <expr> 
<expr>      -> ( <expr> )

//body
<body>      -> ε
<body>      -> <call_func> <new_line> <body>
<body>      -> <expr> <new_line> <body>
<body>      -> <if> <new_line> <body>
<body>      -> <def_var> <new_line> <body>
<body>      -> <while> <new_line> <body>
<new_line>  -> EOL <new_line_n>
<new_line_n>-> ε
<new_line_n>-> <new_line>

//function
<def_func>  -> def fid ( <params> ) EOL <body> end
<call_func> -> fid <func>
<func>      -> ( <params> )
<func>      -> <params>
<params>    -> id<params_n>
<params>    -> ε
<params_n>  -> ,<params>
<params_n>  -> ε

//variables
<def_var>   -> id = <var>
<var>       -> <expr>
<var>       -> <call_func>

//statement
<if>        -> if <expr> then EOL <body> else EOL <body> end

//loop
<while>     -> while <expr> do EOL <body> end